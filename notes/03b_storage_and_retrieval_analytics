---------------------------------------------------------------------------
CHAPTER 3B - STORAGE AND RETRIEVAL - TRANSACTIONS AND ANALYTICS
---------------------------------------------------------------------------

- Transaction Processing vs Analytics

    In the early days of business data processing, a write to the database typically corresponded 
        to a commercial transaction taking place: making a sale, placing an order with a supplier, 
        paying an employee’s salary, etc. As databases expanded into areas that didn’t involve money 
        changing hands, the term transaction nevertheless stuck, referring to a group of reads and 
        writes that form a logical unit.
    
      Note that a transaction needn’t necessarily have ACID (atomicity, consistency, isolation, and 
        durability) properties. Transaction processing just means allowing clients to make low-latency 
        reads and writes—as opposed to batch processing jobs, which only run periodically (for example, 
        once per day).
    
      Even though databases started being used for many different kinds of data—comments on blog posts, 
        actions in a game, contacts in an address book, etc.—the basic access pattern remained similar 
        to processing business transactions. An application typically looks up a small number of records 
        by some key, using an index. Records are inserted or updated based on the user’s input. Because 
        these applications are interactive, the access pattern became known as online transaction 
        processing (OLTP).
    
    
      However, databases also started being increasingly used for data analytics, which has very 
        different access patterns. Usually an analytic query needs to scan over a huge number of 
        records, only reading a few columns per record, and calculates aggregate statistics (such as 
        count, sum, or average) rather than returning the raw data to the user. For example, if your 
        data is a table of sales transactions, then analytic queries might be:
    
          - What was the total revenue of each of our stores in January?    
          - How many more bananas than usual did we sell during our latest promotion?
          - Which brand of baby food is most often purchased together with brand X diapers?
    

       These queries are often written by business analysts, and feed into reports that help the 
         management of a company make better decisions (business intelligence). In order to 
         differentiate this pattern of using databases from transaction processing, it has been called 
         online analytic processing (OLAP).



- OLTP vs OLAP

    The difference between OLTP and OLAP is not always clear-cut, but there are a few typical
      characteristics.

      OLTP
        - Main read pattern is a small number of records per query, fetched by key
        - Main write pattern is random-access, low-latency writes from user input
        - Primarily used by each user/customer via a web application
        - Data represents the latest state of data at current point in time
        - Dataset size is gigabytes to terabytes

      OLAP
        - Main read pattern is aggregation over a large number of records
        - Main write pattern is bulk import (ETL) or event stream
        - Primarily used by internal analysts for decision support
        - Data represents a history of events that happened over time
        - Dataset size is terabytes to petabytes


    At first, the same databases were used for both transaction processing and analytic queries.
      SQL turned out to be very flexible - it worked for both types of queries.  In the late 80s
      and early 90s, there was a trend for companies to stop using their OLTP systems for 
      analytics purposes, and to run analytics on a separate database instead.  This separate
      database was called a 'data warehouse'.



- Data Warehousing

    An enterprise may have dozens of different transaction processing systems: 

      - systems powering the customer-facing website
      - controlling point of sale (checkout) systems in physical stores
      - tracking inventory in warehouses
      - planning routes for vehicles
      - managing suppliers
      - administering employees
      - etc. 

    Each of these systems is complex and needs a team of people to maintain it, so the systems 
      end up operating mostly autonomously from each other.

    These OLTP systems are usually expected to be highly available and to process transactions with 
      low latency, since they are often critical to the operation of the business. Database 
      administrators therefore closely guard their OLTP databases. They are usually reluctant to let 
      business analysts run ad hoc analytic queries on an OLTP database, since those queries are 
      often expensive, scanning large parts of the dataset, which can harm the performance of 
      concurrently executing transactions.

    A 'data warehouse', by contrast, is a separate database that analysts can query to their hearts’ 
      content, without affecting OLTP operations. The data warehouse contains a read-only copy of 
      the data in all the various OLTP systems in the company. Data is extracted from OLTP 
      databases (using either a periodic data dump or a continuous stream of updates), transformed 
      into an analysis-friendly schema, cleaned up, and then loaded into the data warehouse. This 
      process of getting data into the warehouse is known as Extract–Transform–Load (ETL).